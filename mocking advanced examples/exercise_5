Exercise 5
Let's say you have a class called EmailClient that sends emails using a third-party email service, and a class called EmailSender that uses the EmailClient to send emails to a list of recipients. Here's the code for the EmailClient and EmailSender classes:



import smtplib
 
 
class EmailClient:
    def __init__(self, email, password):
        self.email = email
        self.password = password
 
    def send_email(self, recipient, subject, body):
        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()
        server.login(self.email, self.password)
        message = f'Subject: {subject}\n\n{body}'
        server.sendmail(self.email, recipient, message)
        server.quit()
 
class EmailSender:
    def __init__(self, email_client):
        self.email_client = email_client
 
    def send_emails(self, recipients, subject, body):
        for recipient in recipients:
            self.email_client.send_email(recipient, subject, body)


Define a class called TestEmailSender that inherits from unittest.TestCase. Write the unit tests using the unittest framework and the unittest.mock library to simulate sending emails. In the TestEmailSender class define one test case named test_send_emails().



Create a mock EmailClient object using mock.MagicMock. Then create a list of recipients and an EmailSender instance using the mock EmailClient. Call the send_emails() method of the EmailSender with the list of recipients and some test email data. Assert that the send_email() method of the mock EmailClient was called twice with the correct arguments.

